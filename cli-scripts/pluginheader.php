<?php

namespace CliScripts;

include_once 'utils.php';

Class PluginHeader {

  /**
   * Stores the content of the parsed plugin.json file.
   */
  public static $config = null;

  /**
   * Generates a plugin WordPress php file, using the content of the plugin.json file.
   * The file will be saved in the root directory, using the lowercase `pluginName` value.
   */
  public static function generate() {
    write();
    loadConfigFile();
    self::makeFile();
  }

  /**
   * Generates the plugin endpoint file based on the content of the `plugin.json` file.
   * The resulting file will be stored at the root of your plugin folder,
   * and be named with the lowercase value of the `pluginName` attribute.
   */
  private static function makeFile() {
    $filename = strtolower(self::$config->pluginName).'.php';
    $lines = [
      '<?php',
      '/**',
      " * Plugin Name: ".self::$config->pluginName,
      " * Description: ".self::$config->description,
      " * Version:     ".self::$config->version,
      " * Author:      ".self::$config->author,
      " * Author URI:  ".self::$config->authorUri,
      " * Text Domain: ".self::$config->textDomain,
      " * Domain Path: ".self::$config->domainPath,
      " */",
      "",
      "// THIS FILE IS AUTOMATICALLY GENERATED !",
      "// DO NOT ALTER ITS CONTENT",
      "",
      "// Bootstrap the plugin.",
      "require_once '".self::$config->bootstrapFilePath."';"
    ];

    if (!$handle = fopen($filename, 'w')) {
      write("ERROR: Unable to open file \"$filename\"...");
      exit;
    }

    foreach ($lines as $line) {
      $line .= PHP_EOL;
      if (!fwrite($handle, $line)) {
        write("ERROR: Unable to write to file \"$filename\"...");
        exit;
      }
    }

    write("SUCCESS: The plugin header file \"$filename\" has been generated.");

    fclose($handle);
  }

}
